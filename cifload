#! /usr/bin/perl

use warnings;
use strict;

use DBI;

my $dbh = DBI->connect("dbi:SQLite:dbname=mca.sqlite", undef, undef,
		       {AutoCommit => 0});

my %templ = (
    BS => 'A2A1A6A6A6A7A1A1A2A4A4A1A8A1A3A4A3A6A1A1A1A1A4A4A1A1',
    BX => 'A2A4A5A2A1A8A1',
    CR => 'A2A8A2A4A4A1A8A1A3A4A3A6A1A1A1A1A4A4A4A5A8',
    TI => 'A2A7A2A6A1A26A5A4A3A16A8',
    );

$dbh->do(q{CREATE TABLE bs (lineno INTEGER PRIMARY KEY,
			    unique_id, date_runs_from, date_runs_to,
			    days, bhx, status, stp, atoc_code, ats_code)});

$dbh->do(q{CREATE TABLE cr (lineno INTEGER PRIMARY KEY, bslineno,
			    location, category, train_identity,
			    headcode, course_ind, service_code, bussec,
			    power_type, timing_load, speed, oper_chars,
			    class, sleepers, reservations, connect_ind,
			    catering, service_brand, pref_tract, uic_code,
			    rsid)});

$dbh->do(q{CREATE TABLE ti (tiploc PRIMARY KEY, caps, nalco, nalco_check,
			    tps_descr, stanox, po_mcp, crs_code, capri_descr)});

my $bs_ins = $dbh->prepare(q{INSERT INTO bs VALUES(?,?,?,?,?,?,?,?, NULL, NULL)});
my $bs_upd = $dbh->prepare(q{UPDATE bs SET atoc_code = ?, ats_code = ?
			     	       WHERE lineno = ?});
my $cr_ins = $dbh->prepare(q{INSERT INTO cr VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)});
my $cr_upd = $dbh->prepare(q{UPDATE cr SET pref_tract = ?, uic_code = ?,
					   rsid = ?
				       WHERE lineno = ?});
my $ti_ins = $dbh->prepare(q{INSERT INTO ti VALUES(?,?,?,?,?,?,?,?,?)});

sub splitline ($) {
    use integer;
    my ($line) = @_;
    my $templ = $templ{substr($line, 0, 2)};
    return [] unless defined $templ;
    my @val = unpack($templ, $line);
    return @val;
}

my ($lastbs, $lastcr);

while (my $line = <>) {
    use integer;
    my @data = splitline($line);
    if ($data[0] eq 'BS') {
	next unless $data[1] eq 'N'; # Only handle new entries;
	$bs_ins->execute($., @data[2..7, 25]);
	$cr_ins->execute($., $., undef, @data[9..24], undef, undef, undef);
	$lastbs = $.;
    } elsif ($data[0] eq 'BX') {
	$bs_upd->execute(@data[3, 4], $lastbs);
	$cr_upd->execute(@data[1,2,5], $lastbs);
    } elsif ($data[0] eq 'CR') {
	$cr_ins->execute($., $lastbs, @data[1..20]);
    } elsif ($data[0] eq 'TI') {
	$ti_ins->execute(@data[1..9]);
    }
}

$dbh->commit;
